// <auto-generated />
using DOTA2TierList.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DOTA2TierList.Persistence.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DOTA2TierList.Persistence.Entities.RoleEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("DOTA2TierList.Persistence.Entities.TierEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("TierListId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("TierListId");

                    b.ToTable("Tiers");
                });

            modelBuilder.Entity("DOTA2TierList.Persistence.Entities.TierItemEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("character varying(21)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TierListItems");

                    b.HasDiscriminator<string>("Discriminator").HasValue("TierItemEntity");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("DOTA2TierList.Persistence.Entities.TierListEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TypeId")
                        .HasColumnType("integer");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.HasIndex("UserId");

                    b.ToTable("TierLists");
                });

            modelBuilder.Entity("DOTA2TierList.Persistence.Entities.TierListTypeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TierListTypeEntity");
                });

            modelBuilder.Entity("DOTA2TierList.Persistence.Entities.UserEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RoleEntityUserEntity", b =>
                {
                    b.Property<int>("RolesId")
                        .HasColumnType("integer");

                    b.Property<long>("UsersId")
                        .HasColumnType("bigint");

                    b.HasKey("RolesId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("RoleEntityUserEntity");
                });

            modelBuilder.Entity("TierEntityTierItemEntity", b =>
                {
                    b.Property<int>("ItemsId")
                        .HasColumnType("integer");

                    b.Property<long>("TiersId")
                        .HasColumnType("bigint");

                    b.HasKey("ItemsId", "TiersId");

                    b.HasIndex("TiersId");

                    b.ToTable("TierEntityTierItemEntity");
                });

            modelBuilder.Entity("DOTA2TierList.Persistence.Entities.TierItemTypes.ArtifactEntity", b =>
                {
                    b.HasBaseType("DOTA2TierList.Persistence.Entities.TierItemEntity");

                    b.HasDiscriminator().HasValue("ArtifactEntity");
                });

            modelBuilder.Entity("DOTA2TierList.Persistence.Entities.TierItemTypes.HeroEntity", b =>
                {
                    b.HasBaseType("DOTA2TierList.Persistence.Entities.TierItemEntity");

                    b.HasDiscriminator().HasValue("HeroEntity");
                });

            modelBuilder.Entity("DOTA2TierList.Persistence.Entities.TierEntity", b =>
                {
                    b.HasOne("DOTA2TierList.Persistence.Entities.TierListEntity", "TierList")
                        .WithMany("Tiers")
                        .HasForeignKey("TierListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TierList");
                });

            modelBuilder.Entity("DOTA2TierList.Persistence.Entities.TierListEntity", b =>
                {
                    b.HasOne("DOTA2TierList.Persistence.Entities.TierListTypeEntity", "Type")
                        .WithMany("TierLists")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DOTA2TierList.Persistence.Entities.UserEntity", "User")
                        .WithMany("TierLists")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Type");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RoleEntityUserEntity", b =>
                {
                    b.HasOne("DOTA2TierList.Persistence.Entities.RoleEntity", null)
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DOTA2TierList.Persistence.Entities.UserEntity", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TierEntityTierItemEntity", b =>
                {
                    b.HasOne("DOTA2TierList.Persistence.Entities.TierItemEntity", null)
                        .WithMany()
                        .HasForeignKey("ItemsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DOTA2TierList.Persistence.Entities.TierEntity", null)
                        .WithMany()
                        .HasForeignKey("TiersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DOTA2TierList.Persistence.Entities.TierListEntity", b =>
                {
                    b.Navigation("Tiers");
                });

            modelBuilder.Entity("DOTA2TierList.Persistence.Entities.TierListTypeEntity", b =>
                {
                    b.Navigation("TierLists");
                });

            modelBuilder.Entity("DOTA2TierList.Persistence.Entities.UserEntity", b =>
                {
                    b.Navigation("TierLists");
                });
#pragma warning restore 612, 618
        }
    }
}
